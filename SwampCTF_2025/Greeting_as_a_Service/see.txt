0x00000000004010bd : add ah, dh ; nop ; endbr64 ; ret
0x00000000004010eb : add bh, bh ; loopne 0x401155 ; nop ; ret
0x00000000004012ac : add byte ptr [rax], al ; add byte ptr [rax], al ; endbr64 ; ret
0x0000000000401234 : add byte ptr [rax], al ; add byte ptr [rax], al ; leave ; ret
0x0000000000401235 : add byte ptr [rax], al ; add cl, cl ; ret
0x0000000000401036 : add byte ptr [rax], al ; add dl, dh ; jmp 0x401020
0x000000000040115a : add byte ptr [rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004012ae : add byte ptr [rax], al ; endbr64 ; ret
0x00000000004010bc : add byte ptr [rax], al ; hlt ; nop ; endbr64 ; ret
0x0000000000401236 : add byte ptr [rax], al ; leave ; ret
0x000000000040100d : add byte ptr [rax], al ; test rax, rax ; je 0x401016 ; call rax
0x000000000040118a : add byte ptr [rbx - 9], dh ; pop rax ; ret
0x000000000040115b : add byte ptr [rcx], al ; pop rbp ; ret
0x0000000000401193 : add byte ptr [rdi - 0x3d], bl ; pop rsi ; ret
0x0000000000401159 : add byte ptr cs:[rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401237 : add cl, cl ; ret
0x00000000004010ea : add dil, dil ; loopne 0x401155 ; nop ; ret
0x0000000000401038 : add dl, dh ; jmp 0x401020
0x000000000040115c : add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401157 : add eax, 0x2efb ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x0000000000401191 : add eax, 0xc35f00ff ; pop rsi ; ret
0x0000000000401017 : add esp, 8 ; ret
0x0000000000401016 : add rsp, 8 ; ret
0x0000000000401187 : call ptr [rax - 0x3d]
0x000000000040103e : call qword ptr [rax - 0x5e1f00d]
0x0000000000401014 : call rax
0x0000000000401173 : cli ; jmp 0x401100
0x00000000004010c3 : cli ; ret
0x00000000004012bb : cli ; sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000401170 : endbr64 ; jmp 0x401100
0x00000000004010c0 : endbr64 ; ret
0x000000000040128c : fisttp word ptr [rax - 0x7d] ; ret
0x00000000004010be : hlt ; nop ; endbr64 ; ret
0x0000000000401192 : inc dword ptr [rax] ; pop rdi ; ret
0x000000000040118b : jae 0x401184 ; pop rax ; ret
0x0000000000401012 : je 0x401016 ; call rax
0x00000000004010e5 : je 0x4010f0 ; mov edi, 0x404040 ; jmp rax
0x0000000000401127 : je 0x401130 ; mov edi, 0x404040 ; jmp rax
0x000000000040103a : jmp 0x401020
0x0000000000401174 : jmp 0x401100
0x000000000040100b : jmp 0x4840103f
0x00000000004010ec : jmp rax
0x0000000000401238 : leave ; ret
0x00000000004010ed : loopne 0x401155 ; nop ; ret
0x0000000000401156 : mov byte ptr [rip + 0x2efb], 1 ; pop rbp ; ret
0x000000000040119d : mov dword ptr [rsi], eax ; ret
0x0000000000401233 : mov eax, 0 ; leave ; ret
0x0000000000401186 : mov eax, 0xc358ff ; jae 0x401184 ; pop rax ; ret
0x000000000040118f : mov eax, 0xff050f ; pop rdi ; ret
0x00000000004010e7 : mov edi, 0x404040 ; jmp rax
0x000000000040119c : mov qword ptr [rsi], rax ; ret
0x000000000040118c : neg dword ptr [rax - 0x3d] ; mov eax, 0xff050f ; pop rdi ; ret
0x00000000004010bf : nop ; endbr64 ; ret
0x00000000004011a0 : nop ; pop rbp ; ret
0x00000000004010ef : nop ; ret
0x000000000040116c : nop dword ptr [rax] ; endbr64 ; jmp 0x401100
0x00000000004010e6 : or dword ptr [rdi + 0x404040], edi ; jmp rax
0x000000000040129c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040129e : pop r13 ; pop r14 ; pop r15 ; ret
0x00000000004012a0 : pop r14 ; pop r15 ; ret
0x00000000004012a2 : pop r15 ; ret
0x0000000000401188 : pop rax ; ret
0x000000000040129b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040129f : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000040115d : pop rbp ; ret
0x000000000040119a : pop rbx ; ret
0x0000000000401194 : pop rdi ; ret
0x0000000000401198 : pop rdx ; ret
0x00000000004012a1 : pop rsi ; pop r15 ; ret
0x0000000000401196 : pop rsi ; ret
0x000000000040129d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000040101a : ret
0x0000000000401011 : sal byte ptr [rdx + rax - 1], 0xd0 ; add rsp, 8 ; ret
0x000000000040105b : sar edi, 0xff ; call qword ptr [rax - 0x5e1f00d]
0x0000000000401158 : sti ; add byte ptr cs:[rax], al ; add dword ptr [rbp - 0x3d], ebx ; nop ; ret
0x00000000004012bd : sub esp, 8 ; add rsp, 8 ; ret
0x00000000004012bc : sub rsp, 8 ; add rsp, 8 ; ret
0x0000000000401190 : syscall
0x0000000000401010 : test eax, eax ; je 0x401016 ; call rax
0x00000000004010e3 : test eax, eax ; je 0x4010f0 ; mov edi, 0x404040 ; jmp rax
0x0000000000401125 : test eax, eax ; je 0x401130 ; mov edi, 0x404040 ; jmp rax
0x000000000040100f : test rax, rax ; je 0x401016 ; call rax
